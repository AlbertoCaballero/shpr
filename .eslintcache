[{"C:\\Users\\alber\\Documents\\Projects\\React\\shpr\\src\\index.tsx":"1","C:\\Users\\alber\\Documents\\Projects\\React\\shpr\\src\\App.tsx":"2","C:\\Users\\alber\\Documents\\Projects\\React\\shpr\\src\\Item\\Item.tsx":"3"},{"size":318,"mtime":1611306129214,"results":"4","hashOfConfig":"5"},{"size":2432,"mtime":1611306666757,"results":"6","hashOfConfig":"5"},{"size":2019,"mtime":1611304836249,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pxh3zb",{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"C:\\Users\\alber\\Documents\\Projects\\React\\shpr\\src\\index.tsx",[],"C:\\Users\\alber\\Documents\\Projects\\React\\shpr\\src\\App.tsx",["16","17"],"C:\\Users\\alber\\Documents\\Projects\\React\\shpr\\src\\Item\\Item.tsx",["18","19"],"import {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  CardActions,\r\n  IconButton,\r\n  CardMedia,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddShopingCartIcon from \"@material-ui/icons/AddShoppingCart\";\r\n\r\nimport { CartItem } from \"../App\";\r\nimport { SpaceBar } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      minWidth: 275,\r\n    },\r\n    bullet: {\r\n      display: \"inline-block\",\r\n      margin: \"0 2px\",\r\n      transform: \"scale(0.8)\",\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    media: {\r\n      height: 550,\r\n    },\r\n    card: {},\r\n    actions: {\r\n      textAlign: \"right\",\r\n    },\r\n    content: {\r\n      height: \"100%\",\r\n    },\r\n    space: {\r\n      width: \"60%\",\r\n    },\r\n  })\r\n);\r\n\r\ntype ItemProps = {\r\n  item: CartItem;\r\n  handleAddToCart: (clickedItem: CartItem) => void;\r\n};\r\n\r\nconst Item: React.FC<ItemProps> = ({ item, handleAddToCart }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={item.image}\r\n        title={item.title}\r\n      />\r\n      <CardContent className={classes.content}>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {item.title}\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          ${item.price}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {item.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions className={classes.actions}>\r\n        <Button size=\"small\">More Details</Button>\r\n        <div className={classes.space} />\r\n        <IconButton onClick={() => handleAddToCart(item)}>\r\n          <AddShopingCartIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n",["20","21"],{"ruleId":"22","severity":1,"message":"23","line":41,"column":21,"nodeType":"24","messageId":"25","endLine":41,"endColumn":33},{"ruleId":"22","severity":1,"message":"26","line":55,"column":9,"nodeType":"24","messageId":"25","endLine":55,"endColumn":29},{"ruleId":"22","severity":1,"message":"27","line":8,"column":3,"nodeType":"24","messageId":"25","endLine":8,"endColumn":7},{"ruleId":"22","severity":1,"message":"28","line":15,"column":10,"nodeType":"24","messageId":"25","endLine":15,"endColumn":18},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},"@typescript-eslint/no-unused-vars","'setCartItems' is assigned a value but never used.","Identifier","unusedVar","'handleRemoveFromCart' is assigned a value but never used.","'Grid' is defined but never used.","'SpaceBar' is defined but never used.","no-native-reassign",["33"],"no-negated-in-lhs",["34"],"no-global-assign","no-unsafe-negation"]