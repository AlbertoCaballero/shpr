[{"C:\\Users\\alber\\Documents\\Projects\\React\\shpr\\src\\index.tsx":"1","C:\\Users\\alber\\Documents\\Projects\\React\\shpr\\src\\App.tsx":"2","C:\\Users\\alber\\Documents\\Projects\\React\\shpr\\src\\Item\\Item.tsx":"3","C:\\Users\\alber\\Documents\\Projects\\React\\shpr\\src\\Cart\\Cart.tsx":"4","C:\\Users\\alber\\Documents\\Projects\\React\\shpr\\src\\CartItem\\CartItem.tsx":"5"},{"size":318,"mtime":1611306129214,"results":"6","hashOfConfig":"7"},{"size":3286,"mtime":1611601231912,"results":"8","hashOfConfig":"7"},{"size":1983,"mtime":1611597085759,"results":"9","hashOfConfig":"7"},{"size":1202,"mtime":1611715726948,"results":"10","hashOfConfig":"7"},{"size":2002,"mtime":1611601020938,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1pxh3zb",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\alber\\Documents\\Projects\\React\\shpr\\src\\index.tsx",[],["25","26"],"C:\\Users\\alber\\Documents\\Projects\\React\\shpr\\src\\App.tsx",["27"],"import React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Badge from \"@material-ui/core/Badge\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\n\nimport AddShopingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport Item from \"./Item/Item\";\nimport Cart from \"./Cart/Cart\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Toolbar, Typography } from \"@material-ui/core\";\nimport { ShoppingCart } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    cart: {\n      position: \"fixed\",\n      zIndex: 100,\n      right: 20,\n      top: 20,\n    },\n  })\n);\n\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n};\n\nconst getProducts = async (): Promise<CartItemType[]> =>\n  await (await fetch(\"http://fakestoreapi.com/products\")).json();\n\nconst App = () => {\n  const [cartIsOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([] as CartItemType[]);\n  const classes = useStyles();\n\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    \"products\",\n    getProducts\n  );\n  console.log(data);\n\n  const getTotalItems = (items: CartItemType[]) =>\n    items.reduce((acc: number, item) => acc + item.amount, 0);\n\n  const handleAddToCart = (clickedItem: CartItemType) => {\n    setCartItems((prev) => {\n      const isItemInCart = prev.find((item) => item.id === clickedItem.id);\n      if (isItemInCart) {\n        return prev.map((item) =>\n          item.id === clickedItem.id\n            ? { ...item, amount: item.amount + 1 }\n            : item\n        );\n      }\n      return [...prev, { ...clickedItem, amount: 1 }];\n    });\n  };\n\n  const handleRemoveFromCart = (id: number) => {\n    setCartItems((prev) =>\n      prev.reduce((acc, item) => {\n        if (item.id === id) {\n          if (item.amount === 1) return acc;\n          return [...acc, { ...item, amount: item.amount - 1 }];\n        }\n        return [...acc, item];\n      }, [] as CartItemType[])\n    );\n  };\n\n  if (isLoading) return <CircularProgress />;\n  if (error) return <div>Somethin failed!</div>;\n\n  return (\n    <div className=\"App\">\n      <Drawer\n        anchor=\"right\"\n        open={cartIsOpen}\n        onClose={() => setCartOpen(false)}\n      >\n        <Cart\n          cartItems={cartItems}\n          addToCart={handleAddToCart}\n          removeFromCart={handleRemoveFromCart}\n        />\n      </Drawer>\n      <Toolbar>\n        <Typography variant=\"h2\" component=\"h1\">\n          SHPR\n        </Typography>\n      </Toolbar>\n      <IconButton className={classes.cart} onClick={() => setCartOpen(true)}>\n        <Badge badgeContent={getTotalItems(cartItems)} color=\"error\">\n          <ShoppingCart />\n        </Badge>\n      </IconButton>\n      <Grid container spacing={2}>\n        {data?.map((item) => (\n          <Grid item key={item.id} xs={12} sm={6} lg={3}>\n            <Item item={item} handleAddToCart={handleAddToCart} />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default App;\n","C:\\Users\\alber\\Documents\\Projects\\React\\shpr\\src\\Item\\Item.tsx",["28"],"import {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  CardActions,\r\n  IconButton,\r\n  CardMedia,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddShopingCartIcon from \"@material-ui/icons/AddShoppingCart\";\r\n\r\nimport { CartItemType } from \"../App\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      minWidth: 275,\r\n    },\r\n    bullet: {\r\n      display: \"inline-block\",\r\n      margin: \"0 2px\",\r\n      transform: \"scale(0.8)\",\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    media: {\r\n      height: 550,\r\n    },\r\n    card: {},\r\n    actions: {\r\n      textAlign: \"right\",\r\n    },\r\n    content: {\r\n      height: \"100%\",\r\n    },\r\n    space: {\r\n      width: \"60%\",\r\n    },\r\n  })\r\n);\r\n\r\ntype ItemProps = {\r\n  item: CartItemType;\r\n  handleAddToCart: (clickedItem: CartItemType) => void;\r\n};\r\n\r\nconst Item: React.FC<ItemProps> = ({ item, handleAddToCart }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={item.image}\r\n        title={item.title}\r\n      />\r\n      <CardContent className={classes.content}>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {item.title}\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          ${item.price}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {item.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions className={classes.actions}>\r\n        <Button size=\"small\">More Details</Button>\r\n        <div className={classes.space} />\r\n        <IconButton onClick={() => handleAddToCart(item)}>\r\n          <AddShopingCartIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","C:\\Users\\alber\\Documents\\Projects\\React\\shpr\\src\\Cart\\Cart.tsx",[],"C:\\Users\\alber\\Documents\\Projects\\React\\shpr\\src\\CartItem\\CartItem.tsx",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":10,"column":8,"nodeType":"35","messageId":"36","endLine":10,"endColumn":26},{"ruleId":"33","severity":1,"message":"37","line":8,"column":3,"nodeType":"35","messageId":"36","endLine":8,"endColumn":7},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"@typescript-eslint/no-unused-vars","'AddShopingCartIcon' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","no-global-assign","no-unsafe-negation"]